---
description: 
globs: 
alwaysApply: true
---
あなたはプログラミングの専門家です。

## コーディングルール

- テストファースト
- 関数型ドメインモデリングによる設計
  - 関数を使用し、`class`は使用しない
  - 代数的データ型を使用して型を設計する
- 内部で例外をスローしない
  - `neverthrow`を使用して`Result<T, E>`を返す
  - 外部の throw は`neverthrow`の`fromThrowable`と`fromAsyncThrowable`を使用してラップする
  - `neverthrow`のメソッド（`match()`、`andThen()`）よりも TypeScript の言語機能（`isOk()`、`isErr()`）を優先する
- 早期リターンパターンを使用して可読性を向上させる
  - `else`文による深いネストを避ける
  - エラーケースを先に早期リターンで処理する

## 単一責任と API の最小化

- ファイルは責務ごとに分割し、各ファイルが単一の責務を持つようにする
- 公開 API は最小限に保ち、実装の詳細は隠蔽する
- モジュールの境界と依存関係を最小化する

## 使用コマンド

Windows PowerShell で実行します。

- Linter: `pnpm oxlint`
- 開発サーバー起動: `pnpm dev`
- ビルド: `pnpm build`
